#cloud-config
package_upgrade: true

packages:
  # Paquetes esenciales
  - apt-transport-https
  - ca-certificates
  - curl
  - software-properties-common
  - gnupg
  - git

runcmd:
  # Actualizar el sistema
  - apt-get update
  - apt-get upgrade -y

  # Instalar Docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

  # Configurar Docker
  - systemctl start docker
  - systemctl enable docker

  # Crear directorio y clonar repositorio
  - mkdir -p /var/www
  - git clone https://github.com/AlexanderM2004/Grupo1_Proyecto_Apl_Tec_Web.git /var/www
  - chmod -R 755 /var/www

  # Crear directorios necesarios con S mayÃºscula
  - mkdir -p /var/www/api/Storage/logs
  - mkdir -p /var/www/docker/nginx/conf.d
  - mkdir -p /var/www/docker/nginx/logs
  - chmod -R 775 /var/www/api/Storage
  - chown -R www-data:www-data /var/www/api/Storage
  
  # Crear .env en api/
  - |
    cat > /var/www/api/.env << 'EOF'
    DB_HOST=asoproyecto.postgres.database.azure.com
    DB_NAME=postgres
    DB_USER=aso_g03
    DB_PASS=ESPEg03.
    DB_PORT=5432
    JWT_SECRET=secreto_supersecreto_123
    JWT_EXPIRATION=3600
    RATE_LIMIT=100
    RATE_LIMIT_TIME=3600
    APP_ENV=production
    APP_DEBUG=true
    EOF

  # Dar permisos
  - chmod -R 755 /var/www
  - chmod 640 /var/www/api/.env
  - chown -R www-data:www-data /var/www/api/Storage
  
  # Asegurar que el usuario pueda ejecutar Docker
  - usermod -aG docker azureuser

  # Iniciar Docker Compose
  - cd /var/www
  - docker compose up -d --build

  # Guardar estado
  - docker ps > /var/log/docker-status.log 2>&1