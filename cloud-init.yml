#cloud-config
package_upgrade: true

# Instalar paquetes necesarios básicos
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - git
  - gnupg
  - lsb-release

runcmd:
  # Actualizar paquetes del sistema
  - apt-get update
  - apt-get upgrade -y

  # Instalar Docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io
  
  # Habilitar y verificar Docker
  - systemctl start docker
  - systemctl enable docker

  # Instalar Docker Compose
  - curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

  # Crear directorio para la aplicación
  - mkdir -p /app
  - chown -R azureuser:azureuser /app

  # Clonar el repositorio
  - sudo -u azureuser git clone https://github.com/AlexanderM2004/Grupo1_Proyecto_Apl_Tec_Web.git /app

  # Crear el archivo .env en /app/api
  - |
    cat > /app/api/.env << 'EOF'
    DB_HOST=${DB_HOST}
    DB_NAME=${DB_NAME}
    DB_USER=${DB_USER}
    DB_PASS=${DB_PASSWORD}
    DB_PORT=5432
    JWT_SECRET=${JWT_SECRET}
    JWT_EXPIRATION=3600
    RATE_LIMIT=100
    RATE_LIMIT_TIME=3600
    APP_ENV=production
    APP_DEBUG=false
    EOF

  # Configurar permisos
  - chown -R www-data:www-data /app
  - chmod -R 755 /app
  - chmod 600 /app/api/.env

  # Construir y levantar contenedores
  - cd /app
  - docker-compose up -d --build

  # Agregar al grupo docker
  - usermod -aG docker azureuser

  # Verificar el estado de los contenedores
  - docker ps
  - docker-compose logs